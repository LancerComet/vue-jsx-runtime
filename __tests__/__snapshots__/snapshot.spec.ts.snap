// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`_Fragment already imported: _Fragment already imported 1`] = `
"import { Fragment as _Fragment } from 'vue';
import { Fragment as _Fragment2 } from \\"vue/jsx-runtime\\";
import { jsx as _jsx } from \\"vue/jsx-runtime\\";

const Root1 = () => _jsx(_Fragment2, {
  children: \\"root1\\"
});

const Root2 = () => _jsx(_Fragment, {
  children: \\"root2\\"
});"
`;

exports[`MereProps Order: MereProps Order 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"button\\", {
  loading: true,
  ...x,
  type: \\"submit\\",
  children: \\"btn\\"
});"
`;

exports[`Merge class/ style attributes into array: Merge class/ style attributes into array 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"div\\", {
  class: \\"a\\",
  class: b,
  style: \\"color: red\\",
  style: s
});"
`;

exports[`Without JSX should work: Without JSX should work 1`] = `
"import { createVNode } from 'vue';
createVNode('div', null, ['Without JSX should work']);"
`;

exports[`Without props: Without props 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"a\\", {
  children: \\"a\\"
});"
`;

exports[`custom directive: custom directive 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(A, {
  vCus: x
});"
`;

exports[`custom directive: custom directive 2`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";
import { Fragment as _Fragment } from \\"vue/jsx-runtime\\";
import { jsxs as _jsxs } from \\"vue/jsx-runtime\\";

_jsxs(_Fragment, {
  children: [_jsx(A, {
    \\"v-xxx\\": x
  }), _jsx(A, {
    \\"v-xxx\\": [x]
  }), _jsx(A, {
    \\"v-xxx\\": [x, 'y']
  }), _jsx(A, {
    \\"v-xxx\\": [x, 'y', ['a', 'b']]
  }), _jsx(A, {
    \\"v-xxx\\": [x, ['a', 'b']]
  }), _jsx(A, {
    \\"v-xxx\\": [x, y, ['a', 'b']]
  }), _jsx(A, {
    \\"v-xxx\\": [x, y, ['a', 'b']]
  })]
});"
`;

exports[`disable object slot syntax with defaultSlot: defaultSlot 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(Badge, {
  children: slots.default()
});"
`;

exports[`dynamic type in input: dynamic type in input 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"input\\", {
  type: type,
  \\"v-model\\": test
});"
`;

exports[`input[type="checkbox"]: input[type="checkbox"] 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"input\\", {
  type: \\"checkbox\\",
  \\"v-model\\": test
});"
`;

exports[`input[type="radio"]: input[type="radio"] 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";
import { Fragment as _Fragment } from \\"vue/jsx-runtime\\";
import { jsxs as _jsxs } from \\"vue/jsx-runtime\\";

_jsxs(_Fragment, {
  children: [_jsx(\\"input\\", {
    type: \\"radio\\",
    value: \\"1\\",
    \\"v-model\\": test,
    name: \\"test\\"
  }), _jsx(\\"input\\", {
    type: \\"radio\\",
    value: \\"2\\",
    \\"v-model\\": test,
    name: \\"test\\"
  })]
});"
`;

exports[`input[type="text"] .lazy modifier: input[type="text"] .lazy modifier 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"input\\", {
  \\"v-model\\": [test, ['lazy']]
});"
`;

exports[`input[type="text"]: input[type="text"] 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"input\\", {
  \\"v-model\\": test
});"
`;

exports[`isCustomElement: isCustomElement 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"foo\\", {
  children: _jsx(\\"span\\", {
    children: \\"foo\\"
  })
});"
`;

exports[`named import specifier \`Keep Alive\`: named import specifier \`Keep Alive\` 1`] = `
"import { KeepAlive } from 'vue';
import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(KeepAlive, {
  children: \\"123\\"
});"
`;

exports[`namespace specifier \`Keep Alive\`: namespace specifier \`Keep Alive\` 1`] = `
"import * as Vue from 'vue';
import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(Vue.KeepAlive, {
  children: \\"123\\"
});"
`;

exports[`override props multiple: multiple 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(A, {
  loading: true,
  ...a,
  b: 1,
  c: {
    d: 2
  },
  class: \\"x\\",
  style: x
});"
`;

exports[`override props single: single 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"div\\", { ...a
});"
`;

exports[`passing object slots via JSX children multiple expressions: multiple expressions 1`] = `
"import { jsxs as _jsxs } from \\"vue/jsx-runtime\\";

_jsxs(A, {
  children: [foo, bar]
});"
`;

exports[`passing object slots via JSX children single expression, function expression: single expression, function expression 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(A, {
  children: () => \\"foo\\"
});"
`;

exports[`passing object slots via JSX children single expression, non-literal value: runtime check: single expression, non-literal value: runtime check 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

const foo = () => 1;

_jsx(A, {
  children: foo()
});"
`;

exports[`reassign variable as component: reassign variable as component 1`] = `
"import { defineComponent } from 'vue';
import { jsx as _jsx } from \\"vue/jsx-runtime\\";
let a = 1;
const A = defineComponent({
  setup(_, {
    slots
  }) {
    return () => _jsx(\\"span\\", {
      children: slots.default()
    });
  }

});
const _a2 = 2;
a = _a2;
a = _jsx(A, {
  children: a
});"
`;

exports[`select: select 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";
import { jsxs as _jsxs } from \\"vue/jsx-runtime\\";

_jsxs(\\"select\\", {
  \\"v-model\\": test,
  children: [_jsx(\\"option\\", {
    value: \\"1\\",
    children: \\"a\\"
  }), _jsx(\\"option\\", {
    value: 2,
    children: \\"b\\"
  }), _jsx(\\"option\\", {
    value: 3,
    children: \\"c\\"
  })]
});"
`;

exports[`set pragma to custom: custom 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"div\\", {
  children: \\"pragma\\"
});"
`;

exports[`should keep \`import * as Vue from "vue"\`: should keep \`import * as Vue from "vue"\` 1`] = `
"import * as Vue from 'vue';
import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"div\\", {
  children: \\"Vue\\"
});"
`;

exports[`single no need for a mergeProps call: single no need for a mergeProps call 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"div\\", { ...x,
  children: \\"single\\"
});"
`;

exports[`specifiers should be merged into a single importDeclaration: specifiers should be merged into a single importDeclaration 1`] = `
"import { createVNode, Fragment as _Fragment } from 'vue';
import { vShow } from 'vue';
import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(_Fragment, {});"
`;

exports[`textarea: textarea 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"textarea\\", {
  \\"v-model\\": test
});"
`;

exports[`use "@jsx" comment specify pragma: use "@jsx" comment specify pragma 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"div\\", {
  id: \\"custom\\",
  children: \\"Hello\\"
});"
`;

exports[`use "model" as the prop name: use "model" as the prop name 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(C, {
  \\"v-model\\": [foo, \\"model\\"]
});"
`;

exports[`using v-slots without children should not be spread: using v-slots without children should not be spread 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(A, {
  \\"v-slots\\": slots
});"
`;

exports[`v-model target value support variable: v-model target value support variable 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";
import { Fragment as _Fragment } from \\"vue/jsx-runtime\\";
import { jsxs as _jsxs } from \\"vue/jsx-runtime\\";
const foo = 'foo';

const a = () => 'a';

const b = {
  c: 'c'
};

_jsxs(_Fragment, {
  children: [_jsx(A, {
    \\"v-model\\": [xx, foo]
  }), _jsx(B, {
    \\"v-model\\": [xx, ['a']]
  }), _jsx(C, {
    \\"v-model\\": [xx, foo, ['a']]
  }), _jsx(D, {
    \\"v-model\\": [xx, foo === 'foo' ? 'a' : 'b', ['a']]
  }), _jsx(E, {
    \\"v-model\\": [xx, a(), ['a']]
  }), _jsx(F, {
    \\"v-model\\": [xx, b.c, ['a']]
  })]
});"
`;

exports[`v-show: v-show 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"div\\", {
  \\"v-show\\": x,
  children: \\"vShow\\"
});"
`;

exports[`vHtml: vHtml 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"h1\\", {
  \\"v-html\\": \\"<div>foo</div>\\"
});"
`;

exports[`vModels: vModels 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(C, {
  \\"v-models\\": [[foo, [\\"modifier\\"]], [bar, \\"bar\\", [\\"modifier1\\", \\"modifier2\\"]]]
});"
`;

exports[`vText: vText 1`] = `
"import { jsx as _jsx } from \\"vue/jsx-runtime\\";

_jsx(\\"div\\", {
  \\"v-text\\": text
});"
`;
